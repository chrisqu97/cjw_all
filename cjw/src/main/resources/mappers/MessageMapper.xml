<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cjw.dao.mapper.MessageMapper">
  <resultMap id="BaseResultMap" type="com.cjw.dao.entity.Message">
    <id column="message_id" jdbcType="INTEGER" property="messageId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="accepter_id" jdbcType="INTEGER" property="accepterId" />
    <result column="message_type" jdbcType="INTEGER" property="messageType" />
    <result column="position_id" jdbcType="INTEGER" property="positionId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="if_read" jdbcType="INTEGER" property="ifRead" />
    <result column="state" jdbcType="INTEGER" property="state" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.cjw.dao.entity.Message">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    message_id, user_id, accepter_id, message_type, position_id, create_time, if_read, 
    state
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.cjw.dao.entity.MessageExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.cjw.dao.entity.MessageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from message
    where message_id = #{messageId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from message
    where message_id = #{messageId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.cjw.dao.entity.MessageExample">
    delete from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.cjw.dao.entity.Message">
    <selectKey keyProperty="messageId" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into message (message_id, user_id, accepter_id, 
      message_type, position_id, create_time, 
      if_read, state, content
      )
    values (#{messageId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{accepterId,jdbcType=INTEGER}, 
      #{messageType,jdbcType=INTEGER}, #{positionId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{ifRead,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cjw.dao.entity.Message">
    <selectKey keyProperty="messageId" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      message_id,
      <if test="userId != null">
        user_id,
      </if>
      <if test="accepterId != null">
        accepter_id,
      </if>
      <if test="messageType != null">
        message_type,
      </if>
      <if test="positionId != null">
        position_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="ifRead != null">
        if_read,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{messageId,jdbcType=INTEGER},
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="accepterId != null">
        #{accepterId,jdbcType=INTEGER},
      </if>
      <if test="messageType != null">
        #{messageType,jdbcType=INTEGER},
      </if>
      <if test="positionId != null">
        #{positionId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ifRead != null">
        #{ifRead,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cjw.dao.entity.MessageExample" resultType="java.lang.Integer">
    select count(*) from message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update message
    <set>
      <if test="record.messageId != null">
        message_id = #{record.messageId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.accepterId != null">
        accepter_id = #{record.accepterId,jdbcType=INTEGER},
      </if>
      <if test="record.messageType != null">
        message_type = #{record.messageType,jdbcType=INTEGER},
      </if>
      <if test="record.positionId != null">
        position_id = #{record.positionId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ifRead != null">
        if_read = #{record.ifRead,jdbcType=INTEGER},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update message
    set message_id = #{record.messageId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      accepter_id = #{record.accepterId,jdbcType=INTEGER},
      message_type = #{record.messageType,jdbcType=INTEGER},
      position_id = #{record.positionId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      if_read = #{record.ifRead,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update message
    set message_id = #{record.messageId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      accepter_id = #{record.accepterId,jdbcType=INTEGER},
      message_type = #{record.messageType,jdbcType=INTEGER},
      position_id = #{record.positionId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      if_read = #{record.ifRead,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.cjw.dao.entity.Message">
    update message
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="accepterId != null">
        accepter_id = #{accepterId,jdbcType=INTEGER},
      </if>
      <if test="messageType != null">
        message_type = #{messageType,jdbcType=INTEGER},
      </if>
      <if test="positionId != null">
        position_id = #{positionId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ifRead != null">
        if_read = #{ifRead,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where message_id = #{messageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.cjw.dao.entity.Message">
    update message
    set user_id = #{userId,jdbcType=INTEGER},
      accepter_id = #{accepterId,jdbcType=INTEGER},
      message_type = #{messageType,jdbcType=INTEGER},
      position_id = #{positionId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      if_read = #{ifRead,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where message_id = #{messageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cjw.dao.entity.Message">
    update message
    set user_id = #{userId,jdbcType=INTEGER},
      accepter_id = #{accepterId,jdbcType=INTEGER},
      message_type = #{messageType,jdbcType=INTEGER},
      position_id = #{positionId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      if_read = #{ifRead,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER}
    where message_id = #{messageId,jdbcType=INTEGER}
  </update>
</mapper>